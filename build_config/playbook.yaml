---
- name: 'Provision Image'
  hosts: linux-target
  tasks:
  - include_role:
      name: linux-agent
    vars:
      # this regex is used to strip single and multi dimention file extentions from filenames
      # - file1.tar
      # - file2.tar.gz
      # - file3.tar.bz2.back
      # - a_weird_file.name.with.too.many.dots
      file_regex: >-
        ^([^\.]*).*
      # these are packages that need to be compiled from source
      install_from_source:
        - name: python36
          url: https://www.python.org/ftp/python/3.6.10/Python-3.6.10.tgz

      # these are scripts that are directly installed after retrieving them
      install_scripts:
        - name: docker-compose
          url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ ansible_facts.system }}-{{ ansible_facts.architecture }}

      # these are gpg keys that must be installed before installing from repositories
      install_gpg:
        - name: docker
          url: https://download.docker.com/linux/ubuntu/gpg
          keyring: /usr/share/keyrings/docker-archive-keyring.gpg
        - name: azure-cli
          url: https://packages.microsoft.com/keys/microsoft.asc
          keyring: /etc/apt/trusted.gpg.d/microsoft.gpg
      # these are repositories necessary to add before installing packages
      install_repositories:
        # repositories that should be installed on host
        # "dest" keys denote where the repository renty is stored on filesystem
        - name: docker
          content: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_facts.distribution_release }} stable"
          filename: docker.list
        - name: azure-cli
          content: "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ {{ ansible_facts.distribution_release }} main"
          filename: azure-cli.list
      # these are packages necessary to install
      install_apt_packages:
           # asterisk means latest version in aptitude world
          - name: git
            version: '*'
          - name: make
            version: '*'
          - name: azure-cli
            version: '*'
          - name: docker-ce
            version: '*'
          - name: docker-ce-cli
            version: '*'
          - name: containerd.io
            version: '*'
        
    when: (ansible_facts['os_family'] | lower == "debian")
          
  - include_role:
      name: windows-agent
    vars:
      powershell_modules:
        - name: Az
          version: "7.4.0"
      choco_packages:
        - name: git
          version: '2.35.2'
        - name: azure-cli
          version: '2.35.0'
    when: ansible_facts['os_family'] | lower == "windows"
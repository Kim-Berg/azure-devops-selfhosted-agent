---
# tasks file for linux-agent
- name: Update base system packages
  apt:
    name: "{{ item }}"
    state: latest
    force_apt_get: true
    update_cache: true
  loop: "{{ system_packages }}"

- name: download scripts and place them in path
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dst_folder }}"
    mode: '0555'
    force: yes
  loop: "{{ install_scripts }}"

- name: download packages that are compiled from source
  get_url:
    url: "{{ item.url }}"
    dest: /tmp/
    mode: '0440'
  loop: "{{ install_from_source }}"

- name: create unpacking destination folders
  file:
    path: /tmp/{{ item.url.split('/') | last | regex_replace(file_regex, '\1') }}
    state: directory
  loop: "{{ install_from_source }}"

- name: unpack tarballs before compiling from source
  ansible.builtin.unarchive:
    src: "/tmp/{{ item.url.split('/') | last }}"
    dest: /tmp/{{ item.url.split('/') | last | regex_replace(file_regex, '\1') }}
    remote_src: yes
    extra_opts: [--strip-components=1]
  loop: "{{ install_from_source }}"

- name: compile packages
  ansible.builtin.command:
    argv:
      - ./configure 
      - --enable-optimizations
  args:
    chdir: /tmp/{{ item.url.split('/') | last | regex_replace(file_regex, '\1') }}
  loop: "{{ install_from_source }}"

- name: make packages
  ansible.builtin.command:
    argv:
      - make 
      - altinstall
  args:
    chdir: /tmp/{{ item.url.split('/') | last | regex_replace(file_regex, '\1') }}
  loop: "{{ install_from_source }}"

- name: Print return information from the previous task
  ansible.builtin.debug:
    var: install_gpg
    verbosity: 2

- name: Install gpg keyse5340588-47f1-49b7-87ad-dc73657edefc
  ansible.builtin.apt_key:
    url: "{{ item.url }}"
    state: present
    keyring: "{{ item.keyring }}"
  loop: "{{ install_gpg }}"

- name: Add repositories
  ansible.builtin.apt_repository:
    repo: "{{ item.content }}"
    filename: "{{ item.filename }}"
    state: present
  loop: "{{ install_repositories }}"

- name: Update devops agent specific packages
  apt:
    name: "{{ item.name }}"
    state: present
    force_apt_get: true
    update_cache: true
  loop: "{{ install_apt_packages }}"